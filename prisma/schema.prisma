// prisma/schema.prisma
datasource db {
  provider = "sqlite"
  url      = "file:./bank.db"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String    @id @default(uuid())
  username  String    @unique
  password  String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  sessions  Session[]
  accounts  Account[]
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  createdAt DateTime @default(now())
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id])
}

model Account {
  id               String        @id @default(uuid())
  accountNumber    String        @unique
  userId           String
  balance          Float
  currency         String
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  user             User          @relation(fields: [userId], references: [id])
  fromTransactions Transaction[] @relation("FromAccount")
  toTransactions   Transaction[] @relation("ToAccount")
}

model Transaction {
  id                  String   @id @default(uuid())
  fromAccountId       String?
  toAccountId         String?
  externalFromAccount String?
  externalToAccount   String?
  amount              Float
  currency            String
  // Uued v√§ljad valuutakonversiooni jaoks
  conversionRate      Float?
  convertedAmount     Float?
  convertedCurrency   String?
  status              String // pending, inProgress, completed, failed
  explanation         String?
  senderName          String?
  receiverName        String?
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  fromAccount         Account? @relation("FromAccount", fields: [fromAccountId], references: [id])
  toAccount           Account? @relation("ToAccount", fields: [toAccountId], references: [id])
}

model Key {
  id         String   @id @default(uuid())
  kid        String   @unique
  publicKey  String
  privateKey String
  active     Boolean  @default(true)
  createdAt  DateTime @default(now())
}

model BankSettings {
  id             String   @id @default(uuid())
  bankName       String
  bankPrefix     String
  apiKey         String?
  jwksUrl        String
  transactionUrl String
  owners         String
  registered     Boolean  @default(false)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
